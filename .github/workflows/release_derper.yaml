name: Release Derper Docker Image

on:
  push:
   branches:
     - main

jobs:
  release_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Gen Go Commands
        id: go_build
        uses: MultiMx/GoBuildxAction@v0.7
        with:
          name: runner
          args: "-gcflags=-trimpath=$GOPATH -asmflags=-trimpath=$GOPATH -ldflags '-extldflags \"-static -fpic\"'"
          platform: linux/amd64,linux/arm64,linux/386
          target: ./cmd/derper

      - name: Build Binary
        env:
          CGO_ENABLED: 0
        run: ${{ steps.go_build.outputs.commands }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mmx233/derper

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: mmx233
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.derper
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/386

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: Mmx233/GoReleaseCli@v1.1.8
        with:
          target: ./cmd/derper
          compress: tar.gz
          soft-float: true

      - uses: actions/upload-artifact@v4
        with:
          name: tailscale derper
          path: build/*.tar.gz